import argparse

from tree.classes import Lexer, SQLQuery, Tree


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--query', help='Allows for direct passing in of SQL query from the command line', default='')
    args = parser.parse_args()

    # if args.query:
    #     lexer = Lexer(pathToRawInput='')
    #     tokens, raw_queries = lexer.tokenizeQuery(
    #         args.query), args.query
    # else:
    input = 'tests/queries.txt'
    lexer = Lexer(pathToRawInput=input)
    tokens = lexer.tokenizeInput()[0]
    token = lexer.tokenizeQuery(tokens)
    raw_query = lexer.tokenizeInput(getRawOutput=True)[0]

    # The tokens generated by the lexer produce multiple rows of queries
    # In this case it will take the input:
    # ['SELECT', 'id', ',', 'people', 'FROM', 'users', ';']
    query = SQLQuery(tokens=token, query=raw_query)

    # Generate the tree
    tree = Tree(query=query)
    tree.visualize()


if __name__ == '__main__':
    main()
